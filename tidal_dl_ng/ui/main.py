################################################################################
## Form generated from reading UI file 'main.ui'
##
## Created by: Qt User Interface Compiler version 6.8.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import QCoreApplication, QLocale, QMetaObject, QRect, QSize, Qt
from PySide6.QtGui import QAction, QFont, QIcon, QPixmap
from PySide6.QtWidgets import (
    QAbstractItemView,
    QComboBox,
    QFrame,
    QHBoxLayout,
    QLabel,
    QLineEdit,
    QMenu,
    QMenuBar,
    QPlainTextEdit,
    QPushButton,
    QSizePolicy,
    QStatusBar,
    QTreeView,
    QTreeWidget,
    QTreeWidgetItem,
    QVBoxLayout,
    QWidget,
)


class Ui_MainWindow:
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 800)
        self.a_preferences = QAction(MainWindow)
        self.a_preferences.setObjectName("a_preferences")
        self.a_preferences.setEnabled(True)
        self.a_preferences.setText("Preferences...")
        self.a_preferences.setIconText("Preferences...")
        # if QT_CONFIG(tooltip)
        self.a_preferences.setToolTip("Preferences...")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.a_preferences.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.a_preferences.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        self.a_version = QAction(MainWindow)
        self.a_version.setObjectName("a_version")
        self.a_exit = QAction(MainWindow)
        self.a_exit.setObjectName("a_exit")
        self.a_logout = QAction(MainWindow)
        self.a_logout.setObjectName("a_logout")
        self.a_updates_check = QAction(MainWindow)
        self.a_updates_check.setObjectName("a_updates_check")
        self.w_central = QWidget(MainWindow)
        self.w_central.setObjectName("w_central")
        self.w_central.setEnabled(True)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(100)
        sizePolicy.setVerticalStretch(100)
        sizePolicy.setHeightForWidth(self.w_central.sizePolicy().hasHeightForWidth())
        self.w_central.setSizePolicy(sizePolicy)
        # if QT_CONFIG(tooltip)
        self.w_central.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.w_central.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.w_central.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.w_central.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.w_central.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.horizontalLayout = QHBoxLayout(self.w_central)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lv_list_user = QVBoxLayout()
        self.lv_list_user.setObjectName("lv_list_user")
        self.tr_lists_user = QTreeWidget(self.w_central)
        __qtreewidgetitem = QTreeWidgetItem()
        __qtreewidgetitem.setText(2, "Info")
        __qtreewidgetitem.setText(0, "Name")
        self.tr_lists_user.setHeaderItem(__qtreewidgetitem)
        __qtreewidgetitem1 = QTreeWidgetItem(self.tr_lists_user)
        __qtreewidgetitem1.setFlags(Qt.ItemIsEnabled)
        __qtreewidgetitem2 = QTreeWidgetItem(self.tr_lists_user)
        __qtreewidgetitem2.setFlags(Qt.ItemIsEnabled)
        __qtreewidgetitem3 = QTreeWidgetItem(self.tr_lists_user)
        __qtreewidgetitem3.setFlags(Qt.ItemIsEnabled)
        self.tr_lists_user.setObjectName("tr_lists_user")
        # if QT_CONFIG(tooltip)
        self.tr_lists_user.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.tr_lists_user.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.tr_lists_user.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.tr_lists_user.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.tr_lists_user.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.tr_lists_user.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.tr_lists_user.setProperty("showDropIndicator", False)
        self.tr_lists_user.setSelectionMode(QAbstractItemView.SelectionMode.ExtendedSelection)
        self.tr_lists_user.setIndentation(10)
        self.tr_lists_user.setUniformRowHeights(True)
        self.tr_lists_user.setSortingEnabled(True)
        self.tr_lists_user.header().setCascadingSectionResizes(True)
        self.tr_lists_user.header().setHighlightSections(True)
        self.tr_lists_user.header().setProperty("showSortIndicator", True)

        self.lv_list_user.addWidget(self.tr_lists_user)

        self.lv_list_control = QHBoxLayout()
        self.lv_list_control.setObjectName("lv_list_control")
        self.pb_reload_user_lists = QPushButton(self.w_central)
        self.pb_reload_user_lists.setObjectName("pb_reload_user_lists")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.pb_reload_user_lists.sizePolicy().hasHeightForWidth())
        self.pb_reload_user_lists.setSizePolicy(sizePolicy1)

        self.lv_list_control.addWidget(self.pb_reload_user_lists)

        self.pb_download_list = QPushButton(self.w_central)
        self.pb_download_list.setObjectName("pb_download_list")
        sizePolicy1.setHeightForWidth(self.pb_download_list.sizePolicy().hasHeightForWidth())
        self.pb_download_list.setSizePolicy(sizePolicy1)

        self.lv_list_control.addWidget(self.pb_download_list)

        self.lv_list_user.addLayout(self.lv_list_control)

        self.horizontalLayout.addLayout(self.lv_list_user)

        self.lv_search_result = QVBoxLayout()
        # ifndef Q_OS_MAC
        self.lv_search_result.setSpacing(-1)
        # endif
        self.lv_search_result.setObjectName("lv_search_result")
        self.lh_search = QHBoxLayout()
        self.lh_search.setObjectName("lh_search")
        self.l_search = QLineEdit(self.w_central)
        self.l_search.setObjectName("l_search")
        self.l_search.setAcceptDrops(False)
        # if QT_CONFIG(tooltip)
        self.l_search.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.l_search.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.l_search.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.l_search.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.l_search.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.l_search.setLocale(QLocale(QLocale.English, QLocale.UnitedStates))
        self.l_search.setText("")
        self.l_search.setPlaceholderText("Type and press ENTER to search...")
        self.l_search.setClearButtonEnabled(True)

        self.lh_search.addWidget(self.l_search)

        self.cb_search_type = QComboBox(self.w_central)
        self.cb_search_type.setObjectName("cb_search_type")
        self.cb_search_type.setMinimumSize(QSize(100, 0))
        # if QT_CONFIG(tooltip)
        self.cb_search_type.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.cb_search_type.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.cb_search_type.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.cb_search_type.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.cb_search_type.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.cb_search_type.setCurrentText("")
        self.cb_search_type.setSizeAdjustPolicy(QComboBox.SizeAdjustPolicy.AdjustToContentsOnFirstShow)
        self.cb_search_type.setPlaceholderText("")

        self.lh_search.addWidget(self.cb_search_type)

        self.pb_search = QPushButton(self.w_central)
        self.pb_search.setObjectName("pb_search")
        # if QT_CONFIG(statustip)
        self.pb_search.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.pb_search.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.pb_search.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.pb_search.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.pb_search.setText("Search")
        # if QT_CONFIG(shortcut)
        self.pb_search.setShortcut("")
        # endif // QT_CONFIG(shortcut)

        self.lh_search.addWidget(self.pb_search)

        self.lv_search_result.addLayout(self.lh_search)

        self.tr_results = QTreeView(self.w_central)
        self.tr_results.setObjectName("tr_results")
        self.tr_results.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.tr_results.setProperty("showDropIndicator", False)
        self.tr_results.setDragDropOverwriteMode(False)
        self.tr_results.setAlternatingRowColors(False)
        self.tr_results.setSelectionMode(QAbstractItemView.SelectionMode.ExtendedSelection)
        self.tr_results.setIndentation(10)
        self.tr_results.setSortingEnabled(True)

        self.lv_search_result.addWidget(self.tr_results)

        self.lh_download = QHBoxLayout()
        self.lh_download.setObjectName("lh_download")
        self.l_quality_audio = QLabel(self.w_central)
        self.l_quality_audio.setObjectName("l_quality_audio")
        # if QT_CONFIG(tooltip)
        self.l_quality_audio.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.l_quality_audio.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.l_quality_audio.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.l_quality_audio.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.l_quality_audio.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.l_quality_audio.setText("Audio")
        self.l_quality_audio.setAlignment(
            Qt.AlignmentFlag.AlignRight | Qt.AlignmentFlag.AlignTrailing | Qt.AlignmentFlag.AlignVCenter
        )

        self.lh_download.addWidget(self.l_quality_audio)

        self.cb_quality_audio = QComboBox(self.w_central)
        self.cb_quality_audio.setObjectName("cb_quality_audio")
        self.cb_quality_audio.setMinimumSize(QSize(140, 0))
        # if QT_CONFIG(tooltip)
        self.cb_quality_audio.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.cb_quality_audio.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.cb_quality_audio.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.cb_quality_audio.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.cb_quality_audio.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.cb_quality_audio.setCurrentText("")
        self.cb_quality_audio.setSizeAdjustPolicy(QComboBox.SizeAdjustPolicy.AdjustToContentsOnFirstShow)
        self.cb_quality_audio.setPlaceholderText("")
        self.cb_quality_audio.setFrame(True)

        self.lh_download.addWidget(self.cb_quality_audio)

        self.l_quality_video = QLabel(self.w_central)
        self.l_quality_video.setObjectName("l_quality_video")
        # if QT_CONFIG(tooltip)
        self.l_quality_video.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.l_quality_video.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.l_quality_video.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.l_quality_video.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.l_quality_video.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.l_quality_video.setText("Video")
        self.l_quality_video.setAlignment(
            Qt.AlignmentFlag.AlignRight | Qt.AlignmentFlag.AlignTrailing | Qt.AlignmentFlag.AlignVCenter
        )

        self.lh_download.addWidget(self.l_quality_video)

        self.cb_quality_video = QComboBox(self.w_central)
        self.cb_quality_video.setObjectName("cb_quality_video")
        self.cb_quality_video.setMinimumSize(QSize(100, 0))
        # if QT_CONFIG(tooltip)
        self.cb_quality_video.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.cb_quality_video.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.cb_quality_video.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.cb_quality_video.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.cb_quality_video.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.cb_quality_video.setCurrentText("")
        self.cb_quality_video.setSizeAdjustPolicy(QComboBox.SizeAdjustPolicy.AdjustToContentsOnFirstShow)
        self.cb_quality_video.setPlaceholderText("")

        self.lh_download.addWidget(self.cb_quality_video)

        self.pb_download = QPushButton(self.w_central)
        self.pb_download.setObjectName("pb_download")
        # if QT_CONFIG(tooltip)
        self.pb_download.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.pb_download.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.pb_download.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.pb_download.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.pb_download.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.pb_download.setText("Download")
        # if QT_CONFIG(shortcut)
        self.pb_download.setShortcut("")
        # endif // QT_CONFIG(shortcut)

        self.lh_download.addWidget(self.pb_download)

        self.lh_download.setStretch(0, 5)
        self.lh_download.setStretch(2, 5)
        self.lh_download.setStretch(4, 15)

        self.lv_search_result.addLayout(self.lh_download)

        self.te_debug = QPlainTextEdit(self.w_central)
        self.te_debug.setObjectName("te_debug")
        self.te_debug.setEnabled(True)
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Maximum)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.te_debug.sizePolicy().hasHeightForWidth())
        self.te_debug.setSizePolicy(sizePolicy2)
        self.te_debug.setMaximumSize(QSize(16777215, 16777215))
        self.te_debug.setAcceptDrops(False)
        # if QT_CONFIG(tooltip)
        self.te_debug.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.te_debug.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.te_debug.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.te_debug.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.te_debug.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.te_debug.setUndoRedoEnabled(False)
        self.te_debug.setReadOnly(True)

        self.lv_search_result.addWidget(self.te_debug)

        self.horizontalLayout.addLayout(self.lv_search_result)

        self.lv_info = QVBoxLayout()
        self.lv_info.setObjectName("lv_info")
        self.lv_info_item = QVBoxLayout()
        self.lv_info_item.setObjectName("lv_info_item")
        self.horizontalLayout_2 = QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.l_pm_cover = QLabel(self.w_central)
        self.l_pm_cover.setObjectName("l_pm_cover")
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Fixed)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.l_pm_cover.sizePolicy().hasHeightForWidth())
        self.l_pm_cover.setSizePolicy(sizePolicy3)
        self.l_pm_cover.setMaximumSize(QSize(280, 280))
        self.l_pm_cover.setBaseSize(QSize(0, 0))
        self.l_pm_cover.setFrameShape(QFrame.Shape.NoFrame)
        self.l_pm_cover.setPixmap(QPixmap("default_album_image.png"))
        self.l_pm_cover.setScaledContents(True)
        self.l_pm_cover.setAlignment(Qt.AlignmentFlag.AlignHCenter | Qt.AlignmentFlag.AlignTop)

        self.horizontalLayout_2.addWidget(self.l_pm_cover)

        self.lv_info_item.addLayout(self.horizontalLayout_2)

        self.lv_info.addLayout(self.lv_info_item)

        self.lv_queue_download = QVBoxLayout()
        self.lv_queue_download.setObjectName("lv_queue_download")
        self.l_h_queue_download = QLabel(self.w_central)
        self.l_h_queue_download.setObjectName("l_h_queue_download")
        font = QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setKerning(True)
        self.l_h_queue_download.setFont(font)

        self.lv_queue_download.addWidget(self.l_h_queue_download)

        self.tr_queue_download = QTreeWidget(self.w_central)
        __qtreewidgetitem4 = QTreeWidgetItem()
        __qtreewidgetitem4.setText(0, "\ud83e\uddd1\u200d\ud83d\udcbb\ufe0f")
        self.tr_queue_download.setHeaderItem(__qtreewidgetitem4)
        self.tr_queue_download.setObjectName("tr_queue_download")
        self.tr_queue_download.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.tr_queue_download.setTabKeyNavigation(False)
        self.tr_queue_download.setProperty("showDropIndicator", False)
        self.tr_queue_download.setDragDropOverwriteMode(False)
        self.tr_queue_download.setSelectionMode(QAbstractItemView.SelectionMode.ExtendedSelection)
        self.tr_queue_download.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectRows)
        self.tr_queue_download.setRootIsDecorated(False)
        self.tr_queue_download.setItemsExpandable(False)
        self.tr_queue_download.setSortingEnabled(False)
        self.tr_queue_download.setExpandsOnDoubleClick(False)
        self.tr_queue_download.header().setProperty("showSortIndicator", False)
        self.tr_queue_download.header().setStretchLastSection(False)

        self.lv_queue_download.addWidget(self.tr_queue_download)

        self.horizontalLayout_4 = QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pb_queue_download_remove = QPushButton(self.w_central)
        self.pb_queue_download_remove.setObjectName("pb_queue_download_remove")
        self.pb_queue_download_remove.setEnabled(True)
        icon = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.EditClear))
        self.pb_queue_download_remove.setIcon(icon)

        self.horizontalLayout_4.addWidget(self.pb_queue_download_remove)

        self.pb_queue_download_toggle = QPushButton(self.w_central)
        self.pb_queue_download_toggle.setObjectName("pb_queue_download_toggle")
        icon1 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.MediaPlaybackStart))
        self.pb_queue_download_toggle.setIcon(icon1)

        self.horizontalLayout_4.addWidget(self.pb_queue_download_toggle)

        self.lv_queue_download.addLayout(self.horizontalLayout_4)

        self.horizontalLayout_3 = QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pb_queue_download_clear_finished = QPushButton(self.w_central)
        self.pb_queue_download_clear_finished.setObjectName("pb_queue_download_clear_finished")

        self.horizontalLayout_3.addWidget(self.pb_queue_download_clear_finished)

        self.pb_queue_download_clear_all = QPushButton(self.w_central)
        self.pb_queue_download_clear_all.setObjectName("pb_queue_download_clear_all")

        self.horizontalLayout_3.addWidget(self.pb_queue_download_clear_all)

        self.lv_queue_download.addLayout(self.horizontalLayout_3)

        self.lv_info.addLayout(self.lv_queue_download)

        self.horizontalLayout.addLayout(self.lv_info)

        self.horizontalLayout.setStretch(1, 50)
        self.horizontalLayout.setStretch(2, 25)
        MainWindow.setCentralWidget(self.w_central)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName("menubar")
        self.menubar.setGeometry(QRect(0, 0, 1200, 24))
        # if QT_CONFIG(tooltip)
        self.menubar.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.menubar.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.menubar.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.menubar.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.menubar.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.m_file = QMenu(self.menubar)
        self.m_file.setObjectName("m_file")
        # if QT_CONFIG(tooltip)
        self.m_file.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.m_file.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.m_file.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.m_file.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.m_file.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.m_help = QMenu(self.menubar)
        self.m_help.setObjectName("m_help")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        # if QT_CONFIG(tooltip)
        self.statusbar.setToolTip("")
        # endif // QT_CONFIG(tooltip)
        # if QT_CONFIG(statustip)
        self.statusbar.setStatusTip("")
        # endif // QT_CONFIG(statustip)
        # if QT_CONFIG(whatsthis)
        self.statusbar.setWhatsThis("")
        # endif // QT_CONFIG(whatsthis)
        # if QT_CONFIG(accessibility)
        self.statusbar.setAccessibleName("")
        # endif // QT_CONFIG(accessibility)
        # if QT_CONFIG(accessibility)
        self.statusbar.setAccessibleDescription("")
        # endif // QT_CONFIG(accessibility)
        self.statusbar.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        MainWindow.setStatusBar(self.statusbar)

        self.menubar.addAction(self.m_file.menuAction())
        self.menubar.addAction(self.m_help.menuAction())
        self.m_file.addAction(self.a_preferences)
        self.m_file.addAction(self.a_logout)
        self.m_file.addAction(self.a_exit)
        self.m_help.addAction(self.a_version)
        self.m_help.addAction(self.a_updates_check)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)

    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", "MainWindow", None))
        self.a_version.setText(QCoreApplication.translate("MainWindow", "Version", None))
        self.a_exit.setText(QCoreApplication.translate("MainWindow", "Quit TIDAL-Downloader-NG", None))
        self.a_logout.setText(QCoreApplication.translate("MainWindow", "Logout", None))
        self.a_updates_check.setText(QCoreApplication.translate("MainWindow", "Check for Updates", None))
        ___qtreewidgetitem = self.tr_lists_user.headerItem()
        ___qtreewidgetitem.setText(1, QCoreApplication.translate("MainWindow", "obj", None))

        __sortingEnabled = self.tr_lists_user.isSortingEnabled()
        self.tr_lists_user.setSortingEnabled(False)
        ___qtreewidgetitem1 = self.tr_lists_user.topLevelItem(0)
        ___qtreewidgetitem1.setText(0, QCoreApplication.translate("MainWindow", "Playlists", None))
        ___qtreewidgetitem2 = self.tr_lists_user.topLevelItem(1)
        ___qtreewidgetitem2.setText(0, QCoreApplication.translate("MainWindow", "Mixes", None))
        ___qtreewidgetitem3 = self.tr_lists_user.topLevelItem(2)
        ___qtreewidgetitem3.setText(0, QCoreApplication.translate("MainWindow", "Favorites", None))
        self.tr_lists_user.setSortingEnabled(__sortingEnabled)

        self.pb_reload_user_lists.setText(QCoreApplication.translate("MainWindow", "Reload", None))
        self.pb_download_list.setText(QCoreApplication.translate("MainWindow", "Download List", None))
        self.te_debug.setPlaceholderText(QCoreApplication.translate("MainWindow", "Logs...", None))
        self.l_pm_cover.setText("")
        self.l_h_queue_download.setText(QCoreApplication.translate("MainWindow", "Download Queue", None))
        ___qtreewidgetitem4 = self.tr_queue_download.headerItem()
        ___qtreewidgetitem4.setText(5, QCoreApplication.translate("MainWindow", "Quality Video", None))
        ___qtreewidgetitem4.setText(4, QCoreApplication.translate("MainWindow", "Quality Audio", None))
        ___qtreewidgetitem4.setText(3, QCoreApplication.translate("MainWindow", "Type", None))
        ___qtreewidgetitem4.setText(2, QCoreApplication.translate("MainWindow", "Name", None))
        ___qtreewidgetitem4.setText(1, QCoreApplication.translate("MainWindow", "obj", None))
        self.pb_queue_download_remove.setText(QCoreApplication.translate("MainWindow", "Remove", None))
        self.pb_queue_download_toggle.setText(QCoreApplication.translate("MainWindow", "Queue", None))
        self.pb_queue_download_clear_finished.setText(QCoreApplication.translate("MainWindow", "Clear Finished", None))
        self.pb_queue_download_clear_all.setText(QCoreApplication.translate("MainWindow", "Clear All", None))
        self.m_file.setTitle(QCoreApplication.translate("MainWindow", "File", None))
        self.m_help.setTitle(QCoreApplication.translate("MainWindow", "Help", None))

    # retranslateUi
